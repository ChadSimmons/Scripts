<job id="TaskSequence-Variables">
<script language="VBScript" src=".\ZTIUtility.vbs"/>
<script language="VBScript">
' ===============================================================================
'.Synopsis
'   Write-TSVariables.wsf
'   Logs Task Sequence and Windows Process variables
'.Description
'  Log all non-sensitive SCCM/ConfigMgr/MDT Task Sequence variables to files in the _SMSTSLogPath folder
'   1) The standard Task Sequence Master log file (%_SMSTSLogPath%\OSDLOGS\BDD.log  OR  %_SMSTSLogPath%\OSDLOGS\SMSTS.log)
'   2) The standard Task Sequence component log file (%_SMSTSLogPath%\Write-TSVariables.log) (appended)
'   3) A CMTrace formatted log with the Component as the Variable, and the Text as the value (%_SMSTSLogPath%\TSVariables.log) (overwrite)
'   4) A CSV formatted file (%_SMSTSLogPath%\TSVariables.csv) (overwrite)
'   5) Copy the CSV and "variable as component" log files to timestamped files (%_SMSTSLogPath%\TSVariables.YYYYMMDD_HHMMSS.[log|csv])
'  Write an entry in each log file of the location of all of the log files
'
'  Requires
'  - .\ZTIUtility.vbs   					(from MDT 2013 Deployment Share Scripts folder)
'
'.Example
'   cscript.exe /NoLogo Write-TSVariables.wsf
'.Notes
'   ===== Change Log History =====
'   2019/01/24 by Chad.Simmons@CatapultSystems.com - fixed timestamped file copy and suppressed additional variables
'   2017/02/01 by Chad.Simmons@CatapultSystems.com - ported from standalone VBS to MDT WSF script.  Added logging and error handling
'   ===== To Do / Proposed Changes =====
'   TODO: handle cscript and wscript (can't do wscript.echo)
'   TODO: Mirror functionality from Write-TSVariables.ps1
'   TODO: convert comment-based help to support /h parameter
'   ====== References ======
'   https://blogs.technet.microsoft.com/deploymentguys/2010/04/26/exporting-all-sccm-variables-to-a-log-file-for-debugging/
'   https://blogs.technet.microsoft.com/deploymentguys/2008/09/02/logging-all-the-configuration-manager-task-sequence-variables-part-ii/
'   https://blogs.technet.microsoft.com/mniehaus/2010/04/26/dumping-task-sequence-variables/
'   http://www.verboon.info/2012/12/list-task-sequence-variables-and-values-script/
'   https://deploymentbunny.com/2011/04/27/quick-and-dirty-testing-customsettings-ini-variables-in-mdt/
'================================================================================

'//----------------------------------------------------------------------------
'//  Global constant and variable declarations
'//----------------------------------------------------------------------------

Option Explicit
Dim iRetVal

'//----------------------------------------------------------------------------
'//  End declarations
'//----------------------------------------------------------------------------

'//----------------------------------------------------------------------------
'//  Main routine
'//----------------------------------------------------------------------------

'On Error Resume Next
iRetVal = WriteVariables
ProcessResults iRetVal
On Error Goto 0

'//---------------------------------------------------------------------------
'//  Function:	Write-Variables()
'//  Input:		None
'//  Return:	Success - 0
'//			 	Failure - 0
'//  Purpose:	Perform main processing
'//---------------------------------------------------------------------------
Function WriteVariables()
	On Error Goto 0
	iRetVal = Success

	Dim localLogFile, localCSVFile, objLocalLogFile, objLocalCSVFile, objFSO, objShell, strVar, strValue, objTSEnv
	localLogFile = "SMSTS.TSVariables.log"
	localCSVFile = "SMSTS.TSVariables.csv"

	Set objFSO   = CreateObject("Scripting.FileSystemObject")
	Set objShell = CreateObject("WScript.Shell")
	'On error resume next
	Set objTSEnv = CreateObject("Microsoft.SMS.TSEnvironment")
	localLogFile = objTSEnv.Value("_SMSTSLogPath") & "\" & localLogFile
	localCSVFile = objTSEnv.Value("_SMSTSLogPath") & "\" & localCSVFile

	Set objLocalLogFile = objFSO.OpenTextFile(localLogFile, 2, True) 'open to write/overwrite
	Set objLocalCSVFile = objFSO.OpenTextFile(localCSVFile, 2, True) 'open to write/overwrite

	'Write Task Sequence log file headers
	oLogging.CreateEntry "------------ Starting " & oUtility.ScriptName & ".wsf -------------", LogTypeInfo
	oLogging.CreateEntry "Task Sequence LogPath " & oLogging.LogPath, LogTypeInfo
	oLogging.CreateEntry "Task Sequence Master log file " & oLogging.LogPath & "\" & oLogging.MasterLogFile, LogTypeInfo
	oLogging.CreateEntry "Task Sequence Component log file " & oLogging.LogPath & "\" & oLogging.LogFile, LogTypeInfo
	oLogging.CreateEntry "Logging to " & localLogFile, LogTypeInfo
	oLogging.CreateEntry "Logging to " & localCSVFile, LogTypeInfo
	oLogging.CreateEntry "==================================================", LogTypeInfo
	oLogging.CreateEntry "Logging ConfigMgr/MDT Task Sequence Variables", LogTypeInfo
	oLogging.CreateEntry "==================================================", LogTypeInfo

	'region    ========== Get Current Time and Time Zone
	'Adapted from '*** v9.C *** www.dieseyer.de ******************************
	'https://gallery.technet.microsoft.com/scriptcenter/41f111c0-e1fb-4908-b31f-2e3b37a36910
	' enumerate milliseconds
	' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	Dim Tst, AktDMTF
	Tst = Timer()                   ' timer() in USA: 1234.22; dot separation
	Tst = Replace(Tst, "," , ".")  ' timer() in German: 23454,12; comma separation
	If InStr(Tst, ".") = 0 Then Tst = Tst & ".000"
	Tst = Mid(Tst, InStr(Tst, "."), 4)
	If Len(Tst) < 3 Then Tst = Tst & "0"
	' enumerate time zone
	Set AktDMTF = CreateObject("WbemScripting.SWbemDateTime")
	AktDMTF.SetVarDate Now(), True : Tst = Tst & Mid(AktDMTF, 22)
	' : MsgBox Tst, , "099 :: "
	Set AktDMTF = nothing

	Dim dNow : dNow = Now()
	Dim strYear, strMonth, strDay, strHour, strMinute, strSecond, dateInternational, dateUS, dateYYYYMMDD, timeHHMMSS, timeHHcMMcSS
	strYear   = Year(dNow) : IF strYear < 80 Then strYear = "20" & strYear      'The year < 80 then assume 2000's
                             IF Len(strYear) < 3  Then strYear = "19" & strYear 'The year is still 2 digits so assume 1900's
	strMonth  = Right("0" & Month(dNow),2)
	strDay    = Right("0" & Day(dNow),2)
	strHour   = Right("0" & Hour(dNow),2)
	strMinute = Right("0" & Minute(dNow),2)
	strSecond = Right("0" & Second(dNow),2)
	dateInternational = strYear & "-" & strMonth & "-" & strDay
	dateYYYYMMDD = strYear & strMonth & strDay
	dateUS = strMonth & "-" & strDay & "-" & strYear
	timeHHcMMcSS = strHour & ":" & strMinute & ":" & strSecond
	timeHHMMSS = strHour & strMinute & strSecond
	'endregion ========== Get Current Time and Time Zone

	'Write Custom CSV headers
	objLocalCSVFile.writeline "Variable,Value"
	objLocalCSVFile.writeline "Task Sequence LogPath," & objTSEnv.Value("_SMSTSLogPath")
	objLocalCSVFile.writeline "Task Sequence Master Logfile," & oLogging.LogPath & "\" & oLogging.MasterLogFile
	objLocalCSVFile.writeline "Task Sequence DataPath," & objTSEnv.Value("_SMSTSMDataPath")
	objLocalCSVFile.writeline "Task Sequence Component log file," & oLogging.LogPath & "\" & oLogging.LogFile
	objLocalCSVFile.writeline "Custom CMTrace Logfile," & localLogFile
	objLocalCSVFile.writeline "Custom CSV file," & localCSVFile
	objLocalCSVFile.writeline "DateTime," & dateUS & " " & timeHHcMMcSS
	objLocalCSVFile.writeline "Date," & dateUS
	objLocalCSVFile.writeline "Time," & timeHHcMMcSS
	objLocalCSVFile.writeline "=======================" & "," & "==========================================="
	objLocalCSVFile.writeline "Task Sequence Variables" & "," & "ConfigMgr/MDT Task Sequence Variable Values"
	objLocalCSVFile.writeline "=======================" & "," & "==========================================="

	'Write Custom CMTrace Logfile headers
	Dim strPreText, strPostText
	strPreText = "<![LOG["
	strPostText = "]LOG]!><time=" & chr(34) & timeHHcMMcSS & Tst & chr(34) & " date=" & chr(34) & dateUS & chr(34) & " component=" & chr(34) & "Write-TSVariables" & chr(34) & " context=" & chr(34) & " type=" & chr(34) & LogTypeInfo & chr(34) & " thread=" & chr(34) & 0 & chr(34) & " file=" & chr(34) & localLogFile & chr(34) & " >"
	objLocalLogFile.writeline strPreText & "------------ Starting " & oUtility.ScriptName & ".wsf -------------" & strPostText
	objLocalLogFile.writeline strPreText & "Task Sequence LogPath," & oLogging.LogPath & strPostText
	objLocalLogFile.writeline strPreText & "Task Sequence Master log file " & oLogging.LogPath & "\" & oLogging.MasterLogFile & strPostText
	objLocalLogFile.writeline strPreText & "Task Sequence Component log file " & oLogging.LogPath & "\" & oLogging.LogFile & strPostText
	objLocalLogFile.writeline strPreText & "Logging to " & localLogFile & strPostText
	objLocalLogFile.writeline strPreText & "Logging to " & localCSVFile & strPostText
	objLocalLogFile.writeline strPreText & "==================================================" & strPostText
	objLocalLogFile.writeline strPreText & "Logging ConfigMgr/MDT Task Sequence Variables" & strPostText
	objLocalLogFile.writeline strPreText & "==================================================" & strPostText

	'Process all Task Sequence Variables
	For Each strVar in objTSEnv.GetVariables()
		'wscript.echo strVar & "=" & strVar(objVar)
		If uCase(strVar) = uCase("SkipAdminPassword") Then
			strValue = objTSEnv(strVar)
		ElseIf strVar = "password" or InStr(1,strVar,"password",1) > 0 or strVar = "" Then
			strValue = "<password suppressed>"
		ElseIf (Left(strVar,6) = "_SMSTS" and Right(strVar,6) = "Policy") or Left(strVar,12) = "_SMSTSPolicy" or strVar = "_SMSTSDPAuthToken" Then
			strValue = "<_SMSTS Policy data suppressed for readability>"
		ElseIf Left(strVar,6) = "_SMSTS" and Right(strVar,6) = "Config" Then
			strValue = "<_SMSTS Config data suppressed for readability>"
		ElseIf strVar = strVar = "ClientTokenSignature" or strVar = "_SMSTSMPCerts" or strVar = "_SMSTSMediaPFX" or strVar = "_SMSTSSiteSigningCertificate" or strVar = "_SMSTSRootCACerts" Then
			strValue = "<Certificate data suppressed for readability>"
		ElseIf strVar = "_OSDOAF" or Left(strVar,14) = "_SMSTSReserved" or strVar = "_SMSTSTaskSequence" Then
			strValue = "<sensitive data suppressed>"
		ElseIf strVar = "_SMSTSAuthenticator" Then
			strValue = Replace(objTSEnv(strVar), chr(13), " \n")
			strValue = Replace(strValue, chr(10), " \n")
		Else
			strValue = objTSEnv(strVar)
		End If

		'Log to MDT Master and Component log files
		oLogging.CreateEntry strVar & "=" & strValue, LogTypeInfo

		'Log to Custom CSV file
		objLocalCSVFile.writeline strVar & "," & strValue

		'Log to Custom CMTrace log file
		Dim LogTxt
		LogTxt = "<![LOG[" & strValue & "]LOG]!>"
		LogTxt = LogTxt & "<time=""" & timeHHcMMcSS & Tst & """ "
		LogTxt = LogTxt & "date=""" & dateUS & """ "
		LogTxt = LogTxt & "component=""" & strVar & """ "
		LogTxt = LogTxt & "context="""" "
		LogTxt = LogTxt & "type=""" & LogTypeInfo & """ "
		LogTxt = LogTxt & "thread=""0"" file=""" & localLogFile & """ >"
		objLocalLogFile.WriteLine LogTxt
    Next

	oLogging.CreateEntry "==================================================", LogTypeInfo
	oLogging.CreateEntry "Logging Windows Script Host Process Environment Variables", LogTypeInfo
	oLogging.CreateEntry "==================================================", LogTypeInfo

	objLocalCSVFile.writeline "=================" & "," & "======================================================="
	objLocalCSVFile.writeline "Process Variables" & "," & "Windows Script Host Process Environment Variable Values"
	objLocalCSVFile.writeline "=================" & "," & "======================================================="

	objLocalLogFile.writeline strPreText & "==================================================" & strPostText
	objLocalLogFile.writeline strPreText & "Windows Script Host Process Environment Variable Values" & strPostText
	objLocalLogFile.writeline strPreText & "==================================================" & strPostText

	'Process all Windows Process Variables
	Dim objProcEnvironment, objProcVar, strTemp
	Set objProcEnvironment = oShell.Environment("Process")  'can also get SYSTEM and USER
	For Each objProcVar In objProcEnvironment
		If Left(objProcvar,1) = "=" Then
			objProcVar = Right(objProcVar,Len(objProcVar)-1)
		End If
		strTemp = Split(objProcVar, "=", 2)
		On Error Resume Next
		strValue = strTemp(1)
		strVar = strTemp(0)
		On Error Goto 0

		'Log to MDT Master and Component log files
		'oLogging.CreateEntry strVar & "=" & strValue, LogTypeInfo
		oLogging.CreateEntry objProcvar, LogTypeInfo

		'Log to Custom CSV file
		objLocalCSVFile.writeline strVar & "," & strValue

		'Log to Custom CMTrace log file
		LogTxt = "<![LOG[" & strValue & "]LOG]!>"
		LogTxt = LogTxt & "<time=""" & timeHHcMMcSS & Tst & """ "
		LogTxt = LogTxt & "date=""" & dateUS & """ "
		LogTxt = LogTxt & "component=""" & strVar & """ "
		LogTxt = LogTxt & "context="""" "
		LogTxt = LogTxt & "type=""" & LogTypeInfo & """ "
		LogTxt = LogTxt & "thread=""0"" file=""" & localLogFile & """ >"
		objLocalLogFile.WriteLine LogTxt
	Next

	objLocalLogFile.writeline strPreText & "------------ Completed " & oUtility.ScriptName & ".wsf -------------" & strPostText
	objLocalLogFile.close
	objLocalCSVFile.close
    oLogging.CreateEntry "------------ Completed " & oUtility.ScriptName & ".wsf -------------", LogTypeInfo
    WriteVariables = iRetVal

	'Archive files with a timestamp
	objFSO.CopyFile localLogFile, objTSEnv.Value("_SMSTSLogPath") & "\" & "SMSTS.TSVariables." & dateYYYYMMDD & "_" & timeHHMMSS & ".log"
	objFSO.CopyFile localCSVFile, objTSEnv.Value("_SMSTSLogPath") & "\" & "SMSTS.TSVariables." & dateYYYYMMDD & "_" & timeHHMMSS & ".csv"
End Function

</script>
</job>